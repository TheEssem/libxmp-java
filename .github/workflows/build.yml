name: Build

on:
  push:
  release:
    types: [published]

jobs:
  build_natives:
    strategy:
      matrix:
        platform:
          - name: Linux amd64
            os: ubuntu-22.04
            key: linux-amd64
            arch: amd64
            cc: gcc
            out_name: libxmp-jni.so
          - name: Linux x86
            os: ubuntu-22.04
            key: linux-x86
            arch: x86
            cc: i686-linux-gnu-gcc
            out_name: libxmp-jni.so
          - name: Linux aarch64
            os: ubuntu-22.04
            key: linux-aarch64
            arch: aarch64
            cc: aarch64-linux-gnu-gcc
            out_name: libxmp-jni.so
          - name: Windows amd64
            os: windows-2022
            key: win-amd64
            arch: amd64
            cc: cl
            out_name: Release/xmp-jni.dll
    name: Build natives (${{matrix.platform.name}})
    runs-on: ${{matrix.platform.os}}
    defaults:
      run:
        working-directory: ${{github.workspace}}
    env:
      CC: ${{matrix.platform.cc}}
    steps:
      - uses: actions/checkout@v4

      - name: Install aarch64 cross-compiler (Linux)
        if: matrix.platform.key == 'linux-aarch64'
        run: sudo apt update && sudo apt install -y gcc-aarch64-linux-gnu
      - name: Install x86 cross-compiler (Linux)
        if: matrix.platform.key == 'linux-x86'
        run: sudo apt update && sudo apt install -y gcc-i686-linux-gnu

      - name: Configure natives
        run: cmake -DCMAKE_BUILD_TYPE=Release -S ${{github.workspace}} -B build
      - name: Build natives
        run: cmake --build build --config Release

      - name: Upload natives
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.platform.key}}
          path: build/jni/${{matrix.platform.out_name}}
  
  package:
    runs-on: ubuntu-22.04
    needs: [build_natives]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Download natives
        uses: actions/download-artifact@v4
        with:
          path: ${{github.workspace}}/dist

      - name: Build JAR
        # don't want to rebuild the natives here and running both in a single command will attempt to do that
        run: ./gradlew deployAll && ./gradlew build

      - name: Publish to Maven
        if: github.event_name == 'release'
        run: ./gradlew publish
        env:
          MAVEN_NAME: ${{ secrets.MAVEN_NAME }}
          MAVEN_SECRET: ${{ secrets.MAVEN_SECRET }}

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: libxmp-java
          path: ${{github.workspace}}/build/libs/*.jar

  release:
    runs-on: ubuntu-22.04
    needs: [package]
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: libxmp-java

      - name: Upload Artifacts to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: '*.jar'